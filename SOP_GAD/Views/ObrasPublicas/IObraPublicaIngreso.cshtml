@model SOP_GAD.Models.ObrasPublicas
@{
    ViewBag.Title = Model.IdObraPublica > 0 ? Model.ObjetoProcesoObra : "Nuevo Registro";
}

<link href="~/Assets/CSS/Contenido.css" rel="stylesheet" type="text/css">
<script src="~/Assets/JS/Validaciones.js" type="text/javascript"></script>


<ol class="breadcrumb">
    <li><a href="~/ObrasPublicas/IObrasPublicas"><i class="fa fa-hand-o-left" aria-hidden="true"></i>  Atrás</a></li>
    <li class="active">@(Model.IdObraPublica > 0 ? Model.ObjetoProcesoObra : "Nuevo Registro")</li>
</ol>

<h2 class="headertekst">Ingrese la información de la Obra Publica</h2>

@using (Html.BeginForm("Guardar", "ObrasPublicas", FormMethod.Post, new { id = "frm-obraspublicas" }))
{
    @Html.HiddenFor(x => x.IdObraPublica)
    <div class="panel panel-default">
        <div class="panel-heading">Información de Obra Publica</div>
        <div class="panel-body">
            @*Inputs*@
            <div class="form-group">
                @Html.Label("Entidad", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.EntidadObra, new { @class = "formcontrol", @placeholder = "Escriba en nombre de la entidad responsable de la Obra", @onkeypress = "return controlLetra(event)", @onKeyUp = "this.value=this.value.toUpperCase()", @required = "required" })
                @Html.ValidationMessageFor(x => x.EntidadObra, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
                @Html.Label("Objeto de Proceso", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.ObjetoProcesoObra, new { @class = "formcontrol", @placeholder = "“Escriba el nombre de la obra con el lugar donde se la va a realizar entre comillas”.", @onkeypress = "return controlLetra(event)", @onKeyUp = "this.value=this.value.toUpperCase()", @required = "required" })
                @Html.ValidationMessageFor(x => x.ObjetoProcesoObra, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
                @Html.Label("Código", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.CodigoProcesoObra, new { @class = "formcontrol", @placeholder = "Establezca un código a la Obra", @onKeyUp = "this.value=this.value.toUpperCase()", @required = "required" })
                @Html.ValidationMessageFor(x => x.CodigoProcesoObra, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
                @Html.Label("Tipo Compra", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.TipoCompraObra, new { @class = "formcontrol", @placeholder = "Escriba el tipo compra", @onkeypress = "return controlLetra(event)", @maxlength = 20, @required = "required" })
                @Html.ValidationMessageFor(x => x.TipoCompraObra, null, new { @class = "label label-danger" })
            </div>

            <div class="form-group">
                @Html.Label("Presupuesto Referencial Total (Sin Iva)", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.PresupuestoObra, new { @class = "formcontrol", @placeholder = "00000,00", @onkeypress = "return validarComa(event)", @maxlength = 10, @required = "required" })@*, @Value = @ViewBag.Presu*@
                @Html.ValidationMessageFor(x => x.PresupuestoObra, null, new { @class = "label label-danger" })
            </div>
            <br /><br />
            <div class="form-group">
                @Html.Label("Tipo de Contratación", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.TipoContratoObra, new { @class = "formcontrol", @placeholder = "Tipo de Contratación", @onkeypress = "return controlLetra(event)", @maxlength = 20, @required = "required" })
                @Html.ValidationMessageFor(x => x.TipoContratoObra, null, new { @class = "label label-danger" })
            </div>

            <div class="form-group">
                @Html.Label("Anticipo", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.Anticipo, new { @Type = "number", @min = 0, @max = 100, @class = "formcontrol", @placeholder = "Colocar el anticipo en porcentaje del 0 al 100 según el total, ejemplo “50”", @onkeypress = "return validarNumeroEn(event)", @maxlength = 3, @required = "required" })%
                @Html.ValidationMessageFor(x => x.Anticipo, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
                @Html.Label("Saldo", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.Saldo, new { @Type = "number", @min = 0, @max = 100, @class = "formcontrol", @placeholder = "Colocar el saldo existente del 0 al 100 según el anticipo ya establecido", @onkeypress = "return validarNumeroEn(event)", @maxlength = 3, @required = "required" })%
                @Html.ValidationMessageFor(x => x.Saldo, null, new { @class = "label label-danger" })
            </div>

            <div class="form-group">
                @Html.Label("Tipo de Adjudicación", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.TipoAdjudicacionObra, new { @class = "formcontrol", @placeholder = "Colocar el tipo de Adjudicación", @onkeypress = "return controlLetra(event)", @maxlength = 20, @required = "required" })
                @Html.ValidationMessageFor(x => x.TipoAdjudicacionObra, null, new { @class = "label label-danger" })
            </div>

            <div class="form-group">
                @Html.Label("Plazo de Entrega", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.PlazoEntrega, new { @Type = "number", @min = 0, @max = 100, @class = "formcontrol", @placeholder = "Número de días para entregar la obra finalizada", @onkeypress = "return validarNumeroEn(event)", @maxlength = 3, @required = "required" }) días
                @Html.ValidationMessageFor(x => x.PlazoEntrega, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
                @Html.Label("Vigencia de Oferta", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.VigenciaOferta, new { @Type = "number", @min = 0, @max = 100, @class = "formcontrol", @placeholder = "Números de días del plazo de aceptación de la oferta como límite de vigencia", @onkeypress = "return validarNumeroEn(event)", @maxlength = 3, @required = "required" }) días
                @Html.ValidationMessageFor(x => x.VigenciaOferta, null, new { @class = "label label-danger" })
            </div>

            <div class="form-group">
                @Html.Label("Funcionario encargado del proceso", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.FuncionarioEncargado, new { @Type = "email", @class = "formcontrol", @placeholder = "Email de la entidad responsable “example@mail.ru”", @required = "required" })
                @Html.ValidationMessageFor(x => x.FuncionarioEncargado, null, new { @class = "label label-danger" })
            </div>
            <br />
            <div class="form-group">
                @Html.Label("Estado del Proceso", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.EstadoProceso, new { @class = "formcontrol", @placeholder = "Estado del Proceso “En desarrollo o finalizada” ", @onkeypress = "return controlLetra(event)", @maxlength = 20, @required = "required" })
                @Html.ValidationMessageFor(x => x.EstadoProceso, null, new { @class = "label label-danger" })
            </div>
            <div class="form-group">
                @Html.Label("Estado en el cual finalizó el Proceso", new { @class = "col-lg-2 control-label" })
                @Html.TextBoxFor(x => x.Estadofinalizacion, new { @class = "formcontrol", @placeholder = "Estado final “En recepción”", @onkeypress = "return controlLetra(event)", @maxlength = 20, @required = "required" })
                @Html.ValidationMessageFor(x => x.Estadofinalizacion, null, new { @class = "label label-danger" })
            </div>
            <br />
            <div class="form-group">
                @Html.Label("Descripción - Barrio", new { @class = "col-lg-2 control-label" })
                @*@Html.TextBoxFor(x => x.Descripcion, new { @class = "formcontrol", @placeholder = "Escriba el Barrio en donde se va ha realizar la Obra", @onkeypress = "return controlLetra(event)", @maxlength = 20, @required = "required" })*@
                @Html.DropDownListFor(x => x.Descripcion, (List<SelectListItem>)ViewBag.MovieType, new { @class = "formcontrol", @required = "required" })
                @Html.ValidationMessageFor(x => x.Descripcion, null, new { @class = "label label-danger" })
            </div>

        </div>
    </div>

    <div class="form-group ">
        <div class="Centrar_content">
            <button type="submit" class="btn btn-primary">Guardar</button>
        </div>
    </div>

}
<div>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            }
        </script>
    }
</div>